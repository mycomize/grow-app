"""tek templates v3

Revision ID: d3095631b085
Revises: e0c5dd144a54
Create Date: 2025-07-01 19:45:40.125517

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd3095631b085'
down_revision: Union[str, Sequence[str], None] = 'e0c5dd144a54'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('monotub_tek_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('species', sa.String(length=64), nullable=False),
    sa.Column('variant', sa.String(length=64), nullable=True),
    sa.Column('tek_type', sa.String(length=64), nullable=False),
    sa.Column('difficulty', sa.String(length=32), nullable=True),
    sa.Column('estimated_timeline', sa.Integer(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('spawn_type', sa.String(length=128), nullable=False),
    sa.Column('spawn_amount', sa.Float(), nullable=False),
    sa.Column('bulk_type', sa.String(length=128), nullable=False),
    sa.Column('bulk_amount', sa.Float(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('environmental_conditions', sa.JSON(), nullable=True),
    sa.Column('environmental_sensors', sa.JSON(), nullable=True),
    sa.Column('scheduled_actions', sa.JSON(), nullable=True),
    sa.Column('stage_durations', sa.JSON(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('monotub_tek_templates', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_monotub_tek_templates_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_monotub_tek_templates_is_public'), ['is_public'], unique=False)
        batch_op.create_index(batch_op.f('ix_monotub_tek_templates_species'), ['species'], unique=False)
        batch_op.create_index(batch_op.f('ix_monotub_tek_templates_tek_type'), ['tek_type'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('monotub_tek_templates', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_monotub_tek_templates_tek_type'))
        batch_op.drop_index(batch_op.f('ix_monotub_tek_templates_species'))
        batch_op.drop_index(batch_op.f('ix_monotub_tek_templates_is_public'))
        batch_op.drop_index(batch_op.f('ix_monotub_tek_templates_id'))

    op.drop_table('monotub_tek_templates')
    # ### end Alembic commands ###
