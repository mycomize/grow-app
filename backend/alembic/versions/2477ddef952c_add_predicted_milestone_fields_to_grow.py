"""Add predicted milestone fields to grow

Revision ID: 2477ddef952c
Revises: 5bbf3a91fa29
Create Date: 2025-06-27 10:34:40.997707

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2477ddef952c'
down_revision: Union[str, Sequence[str], None] = '5bbf3a91fa29'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('flushes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_flushes_id'))

    op.drop_table('flushes')
    with op.batch_alter_table('grows', schema=None) as batch_op:
        batch_op.add_column(sa.Column('predicted_full_spawn_colonization', sa.Date(), nullable=True))
        batch_op.add_column(sa.Column('predicted_full_bulk_colonization', sa.Date(), nullable=True))
        batch_op.add_column(sa.Column('predicted_first_harvest_date', sa.Date(), nullable=True))
        batch_op.add_column(sa.Column('prediction_inputs_hash', sa.String(length=64), nullable=True))

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('grows', schema=None) as batch_op:
        batch_op.drop_column('prediction_inputs_hash')
        batch_op.drop_column('predicted_first_harvest_date')
        batch_op.drop_column('predicted_full_bulk_colonization')
        batch_op.drop_column('predicted_full_spawn_colonization')

    op.create_table('flushes',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('flush_number', sa.INTEGER(), nullable=False),
    sa.Column('harvest_date', sa.DATE(), nullable=True),
    sa.Column('wet_weight_g', sa.FLOAT(), nullable=True),
    sa.Column('dry_weight_g', sa.FLOAT(), nullable=True),
    sa.Column('potency_mg_g', sa.FLOAT(), nullable=True),
    sa.Column('notes', sa.VARCHAR(length=512), nullable=True),
    sa.Column('grow_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['grow_id'], ['grows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('flushes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_flushes_id'), ['id'], unique=False)

    # ### end Alembic commands ###
